#!/bin/sh

ConfigFolder=${XDG_CONFIG_HOME:-"$HOME/.config"}/bookmenu

VerticalLines=
Monitor=
Font="Mono-12"
BackgroundColor="#1d1f21"
SelectedBackgroundColor="#444"
ForegroundColor="#d8dee9"
SelectedForegroundColor="#268bd2"
Seperator=":"
BookmarksFile=${XDG_CONFIG_HOME:-"$HOME/.config"}/bookmenu/bookmarks
ConfigFile=${XDG_CONFIG_HOME:-"$HOME/.config"}/bookmenu/config
Command="xdg-open"
Prompt="Select a Bookmark"
FuzzyFinder="dmenu"

Err() {
  echo "$2" 1>&2
  exit "$1"
}

HelpPage() {
  echo "Future Help Page"
}

GenerateConfig() {
  if [ "$1" = "-g" ]; then
    if [ -d "$ConfigFolder" ]; then
      rm -rf "$ConfigFolder"
      mkdir "$ConfigFolder"
      sudo cp /usr/share/bookmenu/config "$ConfigFolder/config"
      sudo cp /usr/share/bookmenu/bookmarks "$ConfigFolder/bookmarks"
    else
      mkdir "$ConfigFolder"
      sudo cp /usr/share/bookmenu/config "$ConfigFolder/config"
      sudo cp /usr/share/bookmenu/bookmarks "$ConfigFolder/bookmarks"
    fi
  # Regenerate config file
  elif [ "$1" = "-gc" ]; then
    if [ -d "$ConfigFolder" ]; then
      sudo cp /usr/share/bookmenu/config "$ConfigFolder/config"
    else
      mkdir "$ConfigFolder"
      sudo cp /usr/share/bookmenu/config "$ConfigFolder/config"
    fi
  # Regenerate Bookmarks file
  else
    if [ -d "$ConfigFolder" ]; then
      sudo cp /usr/share/bookmenu/bookmarks "$ConfigFolder/bookmarks"
    else
      mkdir "$ConfigFolder"
      sudo cp /usr/share/bookmenu/bookmarks "$ConfigFolder/bookmarks"
    fi
  fi
}

# Loop over arguments to script
for Value in "$@"
do
  # Handle options
  case "$Value" in
    # Options requring arguments
    -m|-l|-p|-fn|-nb|-sb|-sf|-co|-c|-b|-sp|-f|-a|-r) OptionSet=$Value ;;
    -h|--help) HelpPage; exit 0;;
    -o) EchoPath=true; OptionSet=;;
    -g|-gc|-gb) GenerateConfig "$Value"; OptionSet= ;;
  esac

  # Handle arguments
  if [ -n "$OptionSet" ]; then
    case "$OptionSet" in
      -l) VerticalLines=$Value ;;
      -m) Monitor=$Value ;;
      -p) Prompt=$Value ;;
      -fn) Font=$Value ;;
      -nb) BackgroundColor=$Value ;;
      -nf) ForegroundColor=$Value ;;
      -sb) SelectedBackgroundColor=$Value ;;
      -sf) SelectedForegroundColor=$Value ;;
      -b) BookmarksFile=$Value ;;
      -c) ConfigFile=$Value ;;
      -co) Command=$Value ;;
      -sp) Seperator=$Value ;;
      -f) FuzzyFinder=$Value ;;
      -a) Add=$Value ;;
      -r) Remove=$Value ;;
      *) Err 1 "Invalid option set" ;;
  esac
  fi
done

# Quit with error if bookmarks file doesn't exist
if [ ! -e "$BookmarksFile" ]; then
  Err 1 "Selected bookmarks file does not exist"
fi

# Ignore config file if it doesn't exist
if [ -e "$ConfigFile" ]; then
  # Handle the assignment of config values
  while read -r Line; do
    Key=${Line%%=*}
    Value=${Line##*=}
    case $Key in
      VerticalLines)
        [ -n "$Value" ] && VerticalLines=$Value ;;
      Monitor)
        [ -n "$Value" ] && Monitor=$Value ;;
      Font)
        [ -n "$Value" ] && Font="$Value" ;;
      BackgroundColor)
        [ -n "$Value" ] && BackgroundColor=$Value ;;
      SelectedBackgroundColor)
        [ -n "$Value" ] && SelectedBackgroundColor=$Value ;;
      ForegroundColor)
        [ -n "$Value" ] && ForegroundColor=$Value ;;
      SelectedForegroundColor)
        [ -n "$Value" ] && SelectedForegroundColor=$Value ;;
      Seperator)
        [ -n "$Value" ] && Seperator=$Value ;;
      BookmarksFile)
        [ -n "$Value" ] && BookmarksFile=$Value ;;
      Command)
        [ -n "$Value" ] && Command=$Value ;;
      PromptText)
        [ -n "$Value" ] && Prompt=$Value ;;
      FuzzyFinder)
        [ -n "$Value" ] && FuzzyFinder=$Value ;;
    esac
  done < "$ConfigFile"
fi

# Opens the Selected fuzzy finder with the options set
SelectFinder() {
  case "$FuzzyFinder" in
    dmenu) dmenu -i -p "$Prompt" -fn "$Font" -l "$VerticalLines" \
      -m "$Monitor" -nb "$BackgroundColor" -nf "$ForegroundColor" \
      -sb "$SelectedBackgroundColor" -sf "$SelectedForegroundColor" ;;
    fzf) fzf ;;
    *) Err 1 "$FuzzyFinder in not a supported fuzzy finder"
esac
}

# Selects the path based on the name
SelectPath() {
  xargs -I % grep "%$Seperator" "$BookmarksFile" | sed "s/.*$Seperator//;"
}

# Handle urls to the file system
FileSystem() {
  FullPath=$(echo "$Bookmark" | sed "s|~/|$HOME/|")
  $Command "$FullPath" &
}

# Handle urls to a website
Website() {
  $Command "$Bookmark" &
}

SelectBookmark() {
  Bookmark=$(sort "$BookmarksFile" | sed "s/$Seperator.*//" | SelectFinder \
    | SelectPath)
  if [ -z "$Bookmark" ]; then
    Err 1 "No bookmark selected"
  fi
}

# Add new Bookmark
if [ -n "$Add" ]; then
  echo "$Add" >> "$BookmarksFile"
# Remove Bookmark
elif [ -n "$Remove" ]; then
  sed -i "/$Remove:/d" "$BookmarksFile"
# Echo the path of Selected file
elif [ -n "$EchoPath" ]; then
  SelectBookmark
  echo "$Bookmark" | sed "s|~|$HOME|"
# Normal operation
else
  SelectBookmark
  case "$Bookmark" in
    ~\/*|$HOME*) FileSystem ;;
    *) Website ;;
  esac
fi
